@charset "UTF-8";
/* Функции */
/* Утилиты */
/* Сбросы */
.top__close, .top__toggle {
  font-size: 16px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  vertical-align: middle;
  display: inline-block;
  white-space: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  -webkit-box-shadow: none;
  box-shadow: none;
  line-height: 1.1;
  max-width: none;
  outline: none;
  border: none;
  min-width: 0;
  padding: 0;
}

.top__close, .top__toggle {
  text-decoration: none;
  cursor: pointer;
  color: inherit;
}

body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset, img, abbr {
  border: 0;
}

address, caption, cite, code, dfn, em, strong, th, var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption, th {
  text-align: left;
}

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

body {
  position: relative;
}
body::before {
  content: "";
  display: block;
  text-align: center;
  position: fixed;
  top: 30px;
  right: 5px;
  z-index: 9999;
  min-height: 16px;
  min-width: 40px;
  padding: 0 10px;
  font: 12px/16px Arial, sans-serif;
  color: #777;
  background-color: #ffffd3;
  border: 1px solid #bbb;
}
@media screen and (max-width: 1920px) {
  body::before {
    content: "xxxxlg:1920";
  }
}
@media screen and (max-width: 1680px) {
  body::before {
    content: "xxxlg:1680";
  }
}
@media screen and (max-width: 1440px) {
  body::before {
    content: "xxlg:1440";
  }
}
@media screen and (max-width: 1280px) {
  body::before {
    content: "xlg:1280";
  }
}
@media screen and (max-width: 1100px) {
  body::before {
    content: "lg:1100";
  }
}
@media screen and (max-width: 960px) {
  body::before {
    content: "md:960";
  }
}
@media screen and (max-width: 780px) {
  body::before {
    content: "sm:780";
  }
}
@media screen and (max-width: 640px) {
  body::before {
    content: "xs:640";
  }
}
@media screen and (max-width: 480px) {
  body::before {
    content: "xxs:480";
  }
}
@media screen and (max-width: 360px) {
  body::before {
    content: "xxxs:360";
  }
}

@font-face {
  font-family: "DMEB";
  src: url("fonts/DMSans-ExtraBold.eot?#iefix") format("embedded-opentype"), url("fonts/DMSans-ExtraBold.woff") format("woff"), url("fonts/DMSans-ExtraBold.woff2") format("woff2"), url("fonts/DMSans-ExtraBold.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "DM";
  src: url("fonts/DMSans-Regular.eot?#iefix") format("embedded-opentype"), url("fonts/DMSans-Regular.woff") format("woff"), url("fonts/DMSans-Regular.woff2") format("woff2"), url("fonts/DMSans-Regular.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "DMM";
  src: url("fonts/DMSans-Medium.eot?#iefix") format("embedded-opentype"), url("fonts/DMSans-Medium.woff") format("woff"), url("fonts/DMSans-Medium.woff2") format("woff2"), url("fonts/DMSans-Medium.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "DML";
  src: url("fonts/DMSans-Light.eot?#iefix") format("embedded-opentype"), url("fonts/DMSans-Light.woff") format("woff"), url("fonts/DMSans-Light.woff2") format("woff2"), url("fonts/DMSans-Light.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
@font-face {
  font-family: "DMB";
  src: url("fonts/DMSans-Bold.eot?#iefix") format("embedded-opentype"), url("fonts/DMSans-Bold.woff") format("woff"), url("fonts/DMSans-Bold.woff2") format("woff2"), url("fonts/DMSans-Bold.ttf") format("truetype");
  font-weight: "normal";
  font-style: normal;
}
.container {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding-right: 30px;
  padding-left: 30px;
  margin-right: auto;
  margin-left: auto;
  max-width: 1820px;
  width: 100%;
}
@media (max-width: 780px) {
  .container {
    padding-right: 20px;
    padding-left: 20px;
  }
}
@media (max-width: 480px) {
  .container {
    padding-right: 15px;
    padding-left: 15px;
  }
}

.header {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  z-index: 1;
  position: relative;
  height: 200vh;
  margin-bottom: 100vh;
}
.header__inner {
  top: 0;
  height: 100vh;
  max-height: 915px;
  position: sticky;
  background: linear-gradient(264deg, #5771FF 0%, #465BCC 100%);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
}
.header__top {
  height: 95px;
}
@media (max-width: 960px) {
  .header__top {
    height: 60px;
  }
}
@media (max-width: 780px) {
  .header__top {
    height: 40px;
  }
}
@media (max-width: 640px) {
  .header__top {
    height: 60px;
  }
}
.header__hero {
  padding-top: 80px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}
.header__side {
  padding-bottom: 80px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
}
.header__title {
  display: inline-block;
  font-size: 100px;
  font-family: "DMEB", sans-serif;
  color: rgba(255, 255, 255, 0.3);
  line-height: 0.95;
  letter-spacing: -0.04em;
}
.header__title span {
  color: #fff;
}
.header__s-bottom {
  margin-top: auto;
}
.header__sb-text {
  font-size: 28px;
  font-family: "DML", sans-serif;
  letter-spacing: -0.038em;
  color: rgba(255, 255, 255, 0.6);
  line-height: 1.6;
  margin-bottom: 30px;
}
.header__sb-links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.header__sb-links hr {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: rgba(255, 255, 255, 0.15);
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border: none;
  margin: 0 30px;
  width: 2px;
  height: 35px;
}
.header__sb-link {
  color: #fff;
  text-decoration: none;
  font-size: 28px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  letter-spacing: -0.03em;
}
.header__sb-link::after {
  display: block;
  content: "";
  width: 19px;
  height: 17px;
  background: url("images/icons-sprite.svg#icon-arr-link-view") center/contain no-repeat transparent;
  margin: 10px 0 0 10px;
}
.header__images {
  padding: 0 60px;
}
.header__image {
  display: block;
}

.top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.top__logo {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  max-width: 185px;
  min-width: 95px;
  color: inherit;
  text-decoration: none;
  font-weight: bold;
  padding-right: 15px;
}
@media (max-width: 960px) {
  .top__logo {
    max-width: none;
    min-width: auto;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    -webkit-box-flex: 0;
    -ms-flex-positive: 0;
    flex-grow: 0;
    width: 80px;
  }
}
@media (max-width: 780px) {
  .top__logo {
    padding-right: 22px;
    width: 72px;
  }
}
@media (max-width: 640px) {
  .top__logo {
    padding: 0;
    width: 80px;
    margin-right: auto;
  }
}
.top__logo img {
  display: block;
}
.top__navi {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}
@media (min-width: 641px) {
  .top__navi {
    max-width: none !important;
  }
}
@media (max-width: 640px) {
  .top__navi {
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-flow: column nowrap;
    flex-flow: column nowrap;
    -webkit-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    background-color: rgba(0, 0, 0, 0.85);
    padding: 50px 20px 20px;
    width: 100%;
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    position: fixed;
    z-index: 12;
    top: 0;
    left: -350px;
    max-width: 350px;
    -webkit-transition: left 0.2s linear;
    transition: left 0.2s linear;
  }
  .top__navi.opened {
    left: 0;
  }
}
.top__toggle {
  display: none;
  width: 30px;
  height: 19px;
  background: url("images/icons-sprite.svg#icon-menu-view") center/auto no-repeat transparent;
}
@media (max-width: 640px) {
  .top__toggle {
    display: block;
  }
}
.top__close {
  display: none;
  position: absolute;
  z-index: 1;
  top: 10px;
  right: 10px;
  width: 38px;
  height: 38px;
  background: url("images/icons-sprite.svg#icon-close-view") center/auto no-repeat transparent;
}
@media (max-width: 640px) {
  .top__close {
    display: block;
  }
}
.top__menu {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  max-width: 840px;
  margin-right: auto;
}
@media (max-width: 1440px) {
  .top__menu {
    -webkit-box-flex: 0;
    -ms-flex-positive: 0;
    flex-grow: 0;
  }
}
@media (max-width: 640px) {
  .top__menu {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-flow: column nowrap;
    flex-flow: column nowrap;
    max-width: none;
    overflow: auto;
    margin: 0;
  }
}
.top__link {
  display: block;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 10px 15px;
  color: inherit;
  text-decoration: none;
  font-size: 28px;
  color: #fff;
  white-space: nowrap;
  letter-spacing: -0.02em;
}
@media (max-width: 1440px) {
  .top__link {
    font-size: calc(2.45vw - 7.6px);
  }
}
@media (max-width: 960px) {
  .top__link {
    padding: 10px;
  }
}
@media (max-width: 780px) {
  .top__link {
    padding: 8px;
    font-size: 11px;
  }
}
@media (max-width: 640px) {
  .top__link {
    letter-spacing: normal;
    padding: 19px 0;
    font-size: 20px;
    width: 100%;
  }
}
.top__link_access {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-right: 0;
  letter-spacing: -0.03em;
}
.top__link_access::before {
  content: "";
  margin-right: 10px;
  width: 40px;
  aspect-ratio: 3/1.8;
  background: url("images/icons-sprite.svg#icon-aye-view") center/contain no-repeat transparent;
}
@media (max-width: 1440px) {
  .top__link_access::before {
    width: calc(3.5vw - 7px);
  }
}
@media (max-width: 780px) {
  .top__link_access::before {
    width: 16px;
  }
}
@media (max-width: 640px) {
  .top__link_access::before {
    width: 20px;
  }
}
.top__link_lang {
  color: rgba(255, 255, 255, 0.3);
}
@media (max-width: 640px) {
  .top__link_lang {
    padding: 15px;
  }
}
.top__link_lang.active {
  color: #fff;
}
.top__lang {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  max-width: 150px;
}
@media (max-width: 960px) {
  .top__lang {
    -webkit-box-flex: 0;
    -ms-flex-positive: 0;
    flex-grow: 0;
    max-width: none;
  }
}
@media (max-width: 640px) {
  .top__lang {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
    -ms-flex-item-align: center;
    -ms-grid-row-align: center;
    align-self: center;
  }
}
.top__lang hr {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: rgba(255, 255, 255, 0.15);
  -ms-flex-negative: 0;
  flex-shrink: 0;
  border: none;
  margin: 0;
  width: 2px;
  height: 35px;
}
@media (max-width: 1100px) {
  .top__lang hr {
    height: 25px;
  }
}
@media (max-width: 780px) {
  .top__lang hr {
    height: 15px;
  }
}
@media (max-width: 640px) {
  .top__lang hr {
    height: 22px;
  }
}

body, html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 1.2;
  font-family: "DM", sans-serif;
  background-color: #fafafa;
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
}

.footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-top: auto;
}

p {
  margin-bottom: 10px;
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
